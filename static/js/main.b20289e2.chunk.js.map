{"version":3,"sources":["Header.js","Cards.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Navbar","bg","variant","Container","className","Brand","data","website","title","Cards","useState","contentOverflowing","setContentOverflowing","Row","RepoData","map","Repo","i","Col","sm","md","lg","href","url","Card","Body","Title","OverlayTrigger","trigger","placement","overlay","Popover","Content","description","Text","onMouseEnter","e","el","target","curOverf","style","overflow","isOverflowing","clientWidth","scrollWidth","clientHeight","scrollHeight","displayPopOver","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uoEAaeA,EATA,WACb,OACE,cAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAA1B,SACE,cAACC,EAAA,EAAD,CAAWC,UAAU,OAArB,SACE,cAACJ,EAAA,EAAOK,MAAR,UAAeC,EAAKC,QAAQC,a,wDCmDrBC,EAvDD,WAAO,IAAD,EACkCC,oBAAS,GAD3C,mBACXC,EADW,KACSC,EADT,KAUlB,OACE,cAACT,EAAA,EAAD,UACE,cAACU,EAAA,EAAD,UACGC,GACCA,EAASC,KAAI,SAACC,EAAMC,GAAP,OACX,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAxB,SACE,mBAAGC,KAAMN,EAAKO,IAAKnB,UAAU,qBAA7B,SACE,eAACoB,EAAA,EAAD,CAAMpB,UAAU,YAAhB,UAEE,eAACoB,EAAA,EAAKC,KAAN,WACE,eAACD,EAAA,EAAKE,MAAN,CAAYtB,UAAU,oDAAtB,UACGY,EAAKR,MADR,IACe,mBAAGJ,UAAU,2CAE5B,cAACuB,EAAA,EAAD,CACEC,QAASjB,EAAqB,CAAC,QAAS,SAAW,CAAC,IACpDkB,UAAU,SACVC,QACE,cAACC,EAAA,EAAD,UACE,cAACA,EAAA,EAAQC,QAAT,UACE,gCAAQhB,EAAKiB,kBANrB,SAWE,cAACT,EAAA,EAAKU,KAAN,CACEC,aAAc,SAACC,IAjCd,SAACA,GACtB,IAAMC,EAAKD,EAAEE,OACPC,EAAWF,EAAGG,MAAMC,SACrBF,GAAyB,YAAbA,IAAwBF,EAAGG,MAAMC,SAAW,UAC7D,IAAMC,EAAgBL,EAAGM,YAAcN,EAAGO,aAAeP,EAAGQ,aAAeR,EAAGS,aAC9ET,EAAGG,MAAMC,SAAWF,EACpB3B,EAAsB8B,GA4BAK,CAAeX,IAFnB,SAKGpB,EAAKiB,mBAIZ,cAACT,EAAA,EAAKwB,OAAN,UACE,sBAAM5C,UAAU,eAAhB,SAAgCY,EAAKO,cA7BbN,WCN7BgC,MATf,WACE,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b20289e2.chunk.js","sourcesContent":["import React from \"react\";\nimport { Navbar, Container } from \"react-bootstrap\";\nimport data from \"./WebsiteData.json\";\n\nconst Header = () => {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\">\n      <Container className=\"px-3\">\n        <Navbar.Brand>{data.website.title}</Navbar.Brand>\n      </Container>\n    </Navbar>\n  );\n};\nexport default Header;\n","import React, { useState } from \"react\";\nimport { Card, Row, Container, Col, OverlayTrigger, Popover } from \"react-bootstrap\";\nimport RepoData from \"./Repository.json\";\n\nconst Cards = () => {\n  const [contentOverflowing, setContentOverflowing] = useState(false);\n  const displayPopOver = (e) => {\n    const el = e.target;\n    const curOverf = el.style.overflow;\n    if (!curOverf || curOverf === \"visible\") el.style.overflow = \"hidden\";\n    const isOverflowing = el.clientWidth < el.scrollWidth || el.clientHeight < el.scrollHeight;\n    el.style.overflow = curOverf;\n    setContentOverflowing(isOverflowing);\n  };\n  return (\n    <Container>\n      <Row>\n        {RepoData &&\n          RepoData.map((Repo, i) => (\n            <Col sm={12} md={6} lg={4} key={i}>\n              <a href={Repo.url} className=\"d-block text-muted\">\n                <Card className=\"mt-4 mb-2\">\n                  {/* <Card.Img variant=\"top\" src=\"holder.js/100px160\" /> */}\n                  <Card.Body>\n                    <Card.Title className=\"d-flex align-items-center justify-content-between\">\n                      {Repo.title} <i className=\"fa fa-long-arrow-right text-primary\"></i>\n                    </Card.Title>\n                    <OverlayTrigger\n                      trigger={contentOverflowing ? [\"hover\", \"focus\"] : [\"\"]}\n                      placement=\"bottom\"\n                      overlay={\n                        <Popover>\n                          <Popover.Content>\n                            <small>{Repo.description}</small>\n                          </Popover.Content>\n                        </Popover>\n                      }\n                    >\n                      <Card.Text\n                        onMouseEnter={(e) => {\n                          displayPopOver(e);\n                        }}\n                      >\n                        {Repo.description}\n                      </Card.Text>\n                    </OverlayTrigger>\n                  </Card.Body>\n                  <Card.Footer>\n                    <span className=\"text-primary\">{Repo.url}</span>\n                  </Card.Footer>\n                </Card>\n              </a>\n            </Col>\n          ))}\n      </Row>\n    </Container>\n  );\n};\n\nexport default Cards;\n","import \"./App.scss\";\nimport Header from \"./Header\";\nimport Cards from \"./Cards\";\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Cards />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}